--- InitTools 2.0.0
Тут указаны стандарты структуры модулей.
Этот файл написан преимущественно для личного использования автором библиотеки,
    а для пользователя изучать это не обязательно.
Ключевые значения:
    <название_модуля>
    <название_подмодуля>
    <зависимости_c++>
    <зависимости_библиотеки>
    <зависимости_модули>

Для примеров берется один модуль и один подмодуль

--- Основные стандарты
- Хеадеры модулей всегда имеют в себе #ifndef вместо #pragma once.
- @ifndef должен быть написан как NONAME24_INITTOOLS_<НАЗВАНИЕ_МОДУЛЯ>_H.
- Между концом зависимостей и началом namespace можно расписать дополнительный код к модулю и подмодулям (например, макросы).
- Группы модулей для документации пишутся как <название_модуля>, а для подмодулей <название_модуля>_<название_подмодуля>.
- В части зависимостей модуля зависимости любого типа могут быть задокументированы как "<- в файл.cpp".
- Все функции пишутся стилем snake_case.

--- Краткая структура .h:
// <название_модуля>
#  @defgroup модуля
#  @file модуля
#~ @defgroup подмодуля
#  #ifndef и #define модуля
#  Зависимости трех типов модуля и подмодулей
#  namespace модуля
#~ namespace подмодулей
#  #endif

--- Полный .h:
// <название_модуля>
/** @defgroup <название_модуля> <название_модуля>
 *  \~Russian
 *      @brief Модуль <название_модуля> 
 *  \~English
 *      @brief Module <название_модуля> 
 */
/**
 *  @file <название_модуля>.h
 *  \~Russian
 *      @brief Модуль <название_модуля>
 *  \~English
 *      @brief Module <название_модуля>
 */
/////////////////////////////////////////////////
// InitPlatform -> <название_подмодуля>
/**
 *   @defgroup <название_модуля>_<название_подмодуля> <название_модуля> > <название_подмодуля>
 *   @ingroup InitPlatform
 *   \~Russian
 *       @brief Подмодуль <название_модуля> > <название_подмодуля>
 *   \~English
 *       @brief Submodule <название_модуля> > <название_подмодуля>
 */
///////////////////////////////////////////////////////////////////////////////////////////////
#ifndef NONAME24_INITTOOLS_<НАЗВАНИЕ_МОДУЛЯ>_H
#define NONAME24_INITTOOLS_<НАЗВАНИЕ_МОДУЛЯ>_H

// <название_модуля>:
    // C++ Зависимости
    // #
    <зависимости_c++>

    // Библиотечные зависимости
    // #
    <зависимости_библиотеки>

    // Модульные зависимости
    // #
    <зависимости_модули>
///////////////////////////////
// <название_модуля> -> <название_подмодуля>:
    // C++ Зависимости
    // #
    <зависимости_c++>

    // Библиотечные зависимости
    // #
    <зависимости_библиотеки>

    // Модульные зависимости
    // #
    <зависимости_модули>
/////////////////////////////////////////////

/** @ingroup <название_модуля>
 * \~Russian
 *     @brief Модуль <название_модуля>
 * \~English
 *     @brief Module <название_модуля>
 */
namespace <название_модуля> {
    /** @addtogroup <название_модуля>
     *  @{
     */

    /////////////
    // Функции //
    /////////////
    
    /** @ingroup <название_модуля>_<название_подмодуля>
     *  \~Russian
     *      @brief Namespace подмодуля <название_подмодуля> в модуле <название_модуля>
     *  \~English
     *      @brief Namespace of the submodule <название_подмодуля> in the module <название_модуля>
     */
    namespace <название_подмодуля> {
        /** @addtogroup <название_модуля>_<название_подмодуля>
         *  @{
         */

        /////////////
        // Функции //
        /////////////

        /// @}
    };

    /// @}
};

#endif // NONAME24_INITTOOLS_<НАЗВАНИЕ МОДУЛЯ>_H

--- Краткая структура .cpp
// <название_модуля> / <название_модуля> -> <название_подмодуля>
#include <InitTools/<название_модуля>.h>
# Три типа зависимостей
# namespace модуля и подмодулей

--- Полный .cpp (с подмодулем)
// <название_модуля> -> <название_подмодуля>
#include <InitTools/<название_модуля>.h>

// C++ Зависимости
// #
<зависимости_c++>

// Библиотечные зависимости
// #
<зависимости_библиотеки>

// Модульные зависимости
// #
<зависимости_модули>

namespace <название_модуля> {
    /////////////
    // Функции //
    /////////////
   
    namespace <название_подмодуля> {
        /////////////
        // Функции //
        /////////////
    };
};
